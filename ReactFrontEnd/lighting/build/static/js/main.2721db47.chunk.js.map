{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["url","ToggleButton","fetch","then","response","json","id","Button","onClick","this","handleClick","fullWidth","variant","color","className","Component","SkipButton","BackButton","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","toolbarButtons","marginLeft","LongMenu","props","React","useState","anchorEl","setAnchorEl","options","setOptions","selectedItem","setItem","useEffect","data","animations","open","Boolean","currItem","handleClose","item","type","addItem","aria-label","aria-controls","aria-haspopup","event","currentTarget","Box","overflow","Menu","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","MenuItem","noWrap","selected","Typography","App","classes","value","setValue","currentAni","setCurrentAni","createMuiTheme","palette","Fragment","CssBaseline","AppBar","position","Toolbar","console","log","Container","maxWidth","component","align","gutterBottom","Grid","container","justify","Slider","hidden","disableStylesGeneration","max","min","onChange","newValue","onChangeCommitted","alignItems","justifyContent","val","xs","class","Card","CardContent","textAlign","noValidate","Object","keys","key","index","TextField","name","flag","size","label","charAt","toUpperCase","slice","e","temp","target","handleChange","values","InputProps","readOnly","CardActions","length","temp1","splice","removeItem","form","document","querySelector","formData","FormData","aniToChange","dict","get","requestOptions","method","headers","body","JSON","stringify","params","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2721db47.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect, Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport AddIcon from '@material-ui/icons/Add';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\nimport { TableCell } from '@material-ui/core';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst url = \"http://ethanpi:5000\"\n\nclass ToggleButton extends Component{\n  \n  handleClick(){\n      fetch(url+'/toggle').then(response => response.json());\n    }\n  render()\n  {\n    return (\n    \n        <div id=\"Toggle\">\n        <Button\n          onClick={this.handleClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submit\"\n        >\n          <PowerSettingsNewIcon/>\n        </Button>\n        </div>    \n    )\n  }\n}\n\nclass SkipButton extends Component{\n  \n  handleClick(){\n      fetch(url+'/skip').then(response => response.json());\n    }\n  render()\n  {\n    return (\n    \n        <div id=\"Toggle\">\n        <Button\n          onClick={this.handleClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submit\"\n        >\n          <ArrowForwardIosIcon/>\n        </Button>\n        </div>    \n    )\n  }\n}\n\nclass BackButton extends Component{\n  \n  handleClick(){\n      fetch(url+'/back').then(response => response.json());\n    }\n  render()\n  {\n    return (\n    \n        <div id=\"Toggle\">\n        <Button\n          onClick={this.handleClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submit\"\n        >\n          <ArrowBackIosIcon/>\n        </Button>\n        </div>    \n    )\n  }\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: '#3b3b3b',\n    color: '#efefff',\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: '#3b3b3b',\n    padding: theme.spacing(6),\n  },\n  toolbarButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\n\nconst ITEM_HEIGHT = 48;\n\n\n\nconst LongMenu =(props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = useState(null)\n  const [selectedItem, setItem] = useState(null);\n  useEffect(() => {fetch(url+\"/getanimations\").then(response => response.json()).then(data => {setOptions(data.animations)}); },[]);\n  \n  \n  \n  const open = Boolean(anchorEl);\n  useEffect(() => {setItem(props.currItem);} , []);\n  if (options == null) {return <div> loading </div>}\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (item) => {\n    setAnchorEl(null);\n    if (item.type !== \"click\"){\n    setItem(item);\n    }\n  };\n\n  return (\n    \n    <div>\n      <Button onClick={() => props.addItem(selectedItem)}><AddIcon/></Button>\n      <Button\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <Box overflow=\"hidden\">{selectedItem}</Box>\n      </Button>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '40ch',\n          },\n        }}\n      >\n        {options.map((option) => (\n          <MenuItem noWrap key={option} selected={option === selectedItem} onClick={() => handleClose(option)}>\n            <Typography variant=\"inherit\" noWrap>{option}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\n\nexport default function App() {\n  \n  const classes = useStyles();\n  const [value, setValue] = React.useState(255);\n  const [currentAni, setCurrentAni] = useState([{}]);\n  const handleChangeSlider = (event, newValue) => {\n    console.log(\"hmm\");\n    setValue(newValue);\n  };\n  const handleFinalChange = (event, newValue) => {\n    setValue(newValue);\n    fetch(url+\"/setbrightness/\"+newValue)\n  };\n  const handleChange = (e,key,index) => {\n    let temp = currentAni;\n    temp[index][key] = e.target.value\n    setCurrentAni([...temp])\n  };\n  useEffect(() => {fetch(url+'/getcurrentani').then(response => response.json()).then(data => {setCurrentAni(data.animations);  }); }, []);\n  \n  function addItem(item) {\n    fetch(url+'/addanimation/'+item).then(response => {response.json(); fetch(url+'/getcurrentani').then(response => response.json()).then(data => {setCurrentAni(data.animations); console.log(data.animations);  }); })\n    setCurrentAni([...currentAni])\n  }\n  function removeItem(index) {\n    if (currentAni.length > 1) {\n      \n\n      fetch(url+'/removeanimation/'+index).then(response => response.json())\n      let temp1 = currentAni;\n      let temp = temp1.splice(index,1)[0]; //removed item\n      \n      setCurrentAni([...temp1])\n    }\n  }\n  function update(index){\n    const form =document.querySelector('#card'+index);\n    const formData = new FormData(form);\n    const aniToChange = currentAni[index]\n    const dict = {}\n    Object.keys(aniToChange).map((key,index) => (\n      dict[key] = formData.get(key)\n    ))\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ params: dict})\n  };\n  \n  \n  fetch(url+'/editanimation/'+index, requestOptions).then(response => response.json())\n  }\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n  const theme2 = {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  };\n  return (\n    \n    <MuiThemeProvider theme={theme}>\n    <React.Fragment >\n    <CssBaseline />\n\n      <AppBar position=\"relative\">\n      \n        <Toolbar>\n          <LongMenu currItem=\"Animation\" addItem={addItem} className/>\n          <div className={classes.toolbarButtons}>\n          <Button> <PublishIcon/> </Button>\n          </div>\n        </Toolbar>\n        \n        \n      </AppBar>\n\n      <main>\n        <a> &nbsp;</a>\n        \n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" gutterBottom>\n            Lighting control  \n            </Typography>\n            \n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\" >\n                <Grid container spacing={2} justify=\"center\" > \n                <Grid item>\n                  <BrightnessLowIcon/>\n                </Grid>\n                <Grid item >\n                <Slider  hidden disableStylesGeneration value={value} max={255} min={0}  onChange={handleChangeSlider}  style={{width:200 ,display: 'none'}} />\n                <Slider disableStylesGeneration  max={255} min={0} onChangeCommitted={handleFinalChange}  style={{width:200}} />\n                </Grid>\n                <Grid item><BrightnessHighIcon/></Grid>\n                </Grid>\n\n                <Grid item>\n                <BackButton/> \n                </Grid>\n                <Grid item>\n                <ToggleButton/>\n                </Grid>\n                <Grid item>\n                <SkipButton/>\n                \n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\" alignItems=\"center\">\n          <Grid container spacing={2} justifyContent=\"center\" justify=\"center\">\n            \n            {currentAni.map((val,card) => (\n              <Grid item key={card} xs={6} class=\"cancelFlex\">\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent} style={{textAlign:\"center\"}}>\n                    <form noValidate id={\"card\"+card}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Position: {card}\n                    </Typography>\n                    {Object.keys(val).map((key,index) => (\n                    <Typography class=\"extraMarg\">\n                      \n                      { key !== \"type\" ? \n                      <TextField fullWidth name={key} flag={key+index} id=\"outlined-basic\" size=\"small\" label={key.charAt(0).toUpperCase() + key.slice(1)} variant=\"outlined\" onChange={(e) => handleChange(e,key,card)} value={Object.values(val)[index]} />\n                      :\n                      <TextField fullWidth name={key} flag={key+index} InputProps={{readOnly: true,}} id=\"outlined-basic\" readOnly size=\"small\" label={key.charAt(0).toUpperCase() + key.slice(1)} variant=\"outlined\"  value={Object.values(val)[index]} />\n                    }\n                    </Typography>\n                    ))}\n                  </form>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={() => removeItem(card)}>\n                    <DeleteForeverIcon/>\n                    </Button>\n                    <Button size=\"small\" color=\"primary\" onClick={() => update(card)}>\n                      Edit\n                    </Button>\n                  </CardActions>\n                  \n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom> \n          do later\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Ethan Ray\n        </Typography>\n\n      </footer>\n    </React.Fragment>\n    </MuiThemeProvider>\n    \n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}